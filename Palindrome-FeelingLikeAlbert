class Solution {
    public boolean isPalindrome(int x) {
        String palindrome = String.valueOf(x); // Converted the integer into a string 
        int beginning = 0; //this will keep track of the beginning of the string
        int ending = palindrome.length()-1; // this will be place at the end of the string
        
        while(beginning < ending){  // check that while the begnning of the string is less than the ending if will loop until the string with value x is empty
            if(palindrome.charAt(beginning++) != palindrome.charAt(ending--)) 
                // this two pointers are going to alternate when in the case of 121 it will check the beginning which is 1 and and the ending 1 if they they         
                match return true else return false same with 2 since the beginning is incrementing and the ending is decreasing they will both read the                    
                number 2 which return true as well and so on
                return false;
        }
        return true;
        
        
        /*if(x < 0)
            return false;
        int palindrome = x;
        int reversed = 0;
        while(palindrome != 0){
            int remainder = x % 10;
            reversed = reversed * 10 + remainder;
            x = x / 10;
        }
     return palindrome == reversed; */
    }
}
